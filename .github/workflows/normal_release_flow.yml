name: Normal Release Flow ✈️ 

on:
  pull_request:
    branches:
      - trunk
    types: [closed]

jobs:
  normal_release_flow:
    runs-on: ubuntu-latest
    if: (github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'hot fix') && !contains(github.event.pull_request.labels.*.name, 'qa fix'))
    steps:
    
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Get latest tag
      run: |
        # Fetch the latest, max_by published_date, release tag for the repo
        git fetch --all
        git pull
        OUTPUT_TAG=$(git describe --tags --abbrev=0)
        echo "OUTPUT_TAG=$OUTPUT_TAG" >> $GITHUB_ENV
        OUTPUT_TAG_CUT=$(echo $OUTPUT_TAG | cut -f1 -d"-")
        echo "OUTPUT_TAG_CUT=$OUTPUT_TAG_CUT" >> $GITHUB_ENV

    - name: Bump semver
      uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      with:
        current_version: ${{ env.OUTPUT_TAG_CUT }}
        level: 'minor'
        
    - name: Automate the flow
      run: |
        
        # Fetch the default branch
        DEF_BRANCH=$(cat $GITHUB_EVENT_PATH | jq -r .pull_request.base.repo.default_branch)
        echo "DEF_BRANCH=$DEF_BRANCH" >> $GITHUB_ENV
        git fetch --all
        git pull
        git status
        
        BASE=$(git show-ref ${{ env.OUTPUT_TAG }} --hash)
        CURRENT_HEAD=$(git rev-parse HEAD)
        echo $BASE
        echo $GITHUB_SHA
        echo $CURRENT_HEAD
        
        echo "BASE=$BASE" >> $GITHUB_ENV
        echo "CURRENT_HEAD=$CURRENT_HEAD" >> $GITHUB_ENV
        
        # Save changelog from base release/last release to the recently merged head - to be deprecated in next change
        echo 'LAST_COMMIT_MSG<<EOF' >> $GITHUB_ENV
        git log $BASE..$GITHUB_SHA >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        echo ${{ env.LAST_COMMIT_MSG }}
        
        # Find out services modified in the release
        echo 'SERVICES_IMPACTED<<EOF' >> $GITHUB_ENV
        git log $BASE..$GITHUB_SHA --pretty=format: --name-only | grep . | sed -e  's:/.*$::' | sort -u >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        echo ${{ env.SERVICES_IMPACTED }}
        
    - name: Generate beautiful changelog
      uses: mikepenz/release-changelog-builder-action@v1
      id: changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        configuration: ".github/changelog_config.json"
        ignorePreReleases: "false"
        fromTag: ${{ env.BASE }}
        toTag: ${{ env.CURRENT_HEAD }}
        token: ${{ secrets.GITHUB_TOKEN }} 
    
    - uses: ncipollo/release-action@v1.8.10
      with:
        allowUpdates: true
        draft: true
        name: "${{ steps.bump-semver.outputs.new_version }}-rc.1 🌈"
        tag: "${{ steps.bump-semver.outputs.new_version }}-rc.1"
        commit: "${{ env.DEF_BRANCH }}"
        body: ${{ steps.changelog.outputs.changelog }} <br /> Services Impacted are <br /> ${{ env.SERVICES_IMPACTED }}
        token: ${{ secrets.GITHUB_TOKEN }}     
