name: Normal Release Flow ‚úàÔ∏è 

on:
  pull_request:
    branches:
      - trunk
    types: [closed]

jobs:
  normal_release_flow:
    runs-on: ubuntu-latest
    if: (github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'hot fix') && !contains(github.event.pull_request.labels.*.name, 'qa fix'))
    steps:
    
    - name: checkout
      uses: actions/checkout@v1
      
    - name: Get latest tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag
      with:
        semver_only: true

    - name: Bump semver
      uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: 'minor'
        
    - uses: actions/checkout@v2
    - run: |
        
        # Fetch the default branch
        DEF_BRANCH=$(cat $GITHUB_EVENT_PATH | jq -r .pull_request.base.repo.default_branch)
        echo "DEF_BRANCH=$DEF_BRANCH" >> $GITHUB_ENV
        git fetch --all
        git pull
        git status
        
        BASE=$(git show-ref ${{ steps.get-latest-tag.outputs.tag }} --hash)
        echo $BASE
        echo $GITHUB_SHA
        git log $(git show-ref ${{ steps.get-latest-tag.outputs.tag }}..trunk --format="%s"
        # For some reason the abov log only works with trunk and output tag
        
        # Save changelog from base release/last release to the recently merged head
        echo 'LAST_COMMIT_MSG<<EOF' >> $GITHUB_ENV
        git log $(git show-ref ${{ steps.get-latest-tag.outputs.tag }}..trunk --format="%s" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
        echo ${{ env.LAST_COMMIT_MSG }}
    
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        name: "${{ steps.bump-semver.outputs.new_version }} üåà"
        tag: "${{ steps.bump-semver.outputs.new_version }}"
        commit: "${{ env.DEF_BRANCH }}"
        body: "‚úàÔ∏è The following commits are included in this release <br /> ${{ env.LAST_COMMIT_MSG }}"
        token: ${{ secrets.GITHUB_TOKEN }}     
