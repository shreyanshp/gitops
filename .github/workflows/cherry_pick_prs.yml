name: Cherry Picking For Patch Version 🍒 
on:
  pull_request:
    branches:
      - trunk
    types: [closed]

jobs:
  cherry_pick_patch_version:
    if: (github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'cherry pick'))
    runs-on: ubuntu-latest
    name: cherry_pick_patch_version
    steps:
    - name: checkout
      uses: actions/checkout@v1
      
    - name: Get latest tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag
      with:
        semver_only: true

    - name: Bump semver
      uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: 'patch'
        
    - uses: actions/checkout@v2
    - run: |
        cat $GITHUB_EVENT_PATH
        GITHUB_SHA=$(cat $GITHUB_EVENT_PATH | jq -r .pull_request.head.sha)
        echo $GITHUB_SHA
        git fetch --all
        git checkout trunk
        branchExists=$(git ls-remote origin Release/${{ steps.bump-semver.outputs.new_version }})
        if [[ -z "${branchExists}" ]]; then
          git checkout -b "Release/${{ steps.bump-semver.outputs.new_version }}" "${{ steps.get-latest-tag.outputs.tag }}" && git push -u origin "Release/${{ steps.bump-semver.outputs.new_version }}"
        else
          git checkout "Release/${{ steps.bump-semver.outputs.new_version }}"
        fi
        git config user.name github-actions
        git config user.email github-actions@github.com
        git cherry-pick -x "${GITHUB_SHA}"
        git push -u origin "Release/${{ steps.bump-semver.outputs.new_version }}"
        git status
        CHANGE="$(git log $(git show-ref ${{ steps.get-latest-tag.outputs.tag }} --hash)..$(git show-ref ${{ steps.bump-semver.outputs.new_version }} --hash) --format="%s")"
        echo "LAST_COMMIT_MSG=$CHANGE" >> $GITHUB_ENV
        echo ${{ env.LAST_COMMIT_MSG }}
    
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        name: "${{ steps.bump-semver.outputs.new_version }} 🌈"
        tag: "${{ steps.bump-semver.outputs.new_version }}"
        commit: "Release/${{ steps.bump-semver.outputs.new_version }}"
        body: "Cherry Picked following ${{ env.LAST_COMMIT_MSG }}"
        token: ${{ secrets.GITHUB_TOKEN }}  
    
